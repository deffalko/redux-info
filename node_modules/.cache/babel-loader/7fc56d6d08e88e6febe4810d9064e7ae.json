{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\"; // Предположим, у вас есть массив данных, который нужно управлять\n// В реальности вы можете загрузить это с сервера или импортировать из файла\n// Для примера возьмем массив данных (можно заменить на вашу структуру)\n\nconst initialState = {\n  items: [// Здесь вы можете инициализировать состояние на основе данных\n  // например, так:\n  {\n    id: 1,\n    name: \"DevLens\",\n    isActive: true\n  }, {\n    id: 2,\n    name: \"StyleSpy\",\n    isActive: true\n  }, {\n    id: 3,\n    name: \"SpeedBoost\",\n    isActive: false\n  }, {\n    id: 4,\n    name: \"JSONWizard\",\n    isActive: true\n  }, {\n    id: 5,\n    name: \"TabMaster Pro\",\n    isActive: true\n  }, {\n    id: 6,\n    name: \"ViewportBuddy\",\n    isActive: false\n  }, {\n    id: 7,\n    name: \"Markup Notes\",\n    isActive: true\n  }, {\n    id: 8,\n    name: \"GridGuides\",\n    isActive: false\n  }, {\n    id: 9,\n    name: \"Palette Picker\",\n    isActive: true\n  }, {\n    id: 10,\n    name: \"LinkChecker\",\n    isActive: true\n  }, {\n    id: 11,\n    name: \"DOM Snapshot\",\n    isActive: false\n  }, {\n    id: 12,\n    name: \"ConsolePlus\",\n    isActive: true\n  } // добавьте остальные элементы из data.json\n  ]\n};\nconst removeSlice = createSlice({\n  name: \"remove\",\n  initialState,\n  reducers: {\n    removeCard: (state, action) => {\n      const idToRemove = action.payload;\n      return state.filter(card => card.id !== idToRemove);\n    }\n  }\n});\nexport const {\n  removeCard\n} = removeSlice.actions;\nexport const removeReducer = toggleSlice.reducer;","map":{"version":3,"sources":["C:/Users/gumar/OneDrive/Рабочий стол/redux-info/src/features/remove/remove-slice.js"],"names":["createSlice","initialState","items","id","name","isActive","removeSlice","reducers","removeCard","state","action","idToRemove","payload","filter","card","actions","removeReducer","toggleSlice","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B,C,CAEA;AACA;AACA;;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,CACL;AACA;AACA;AAAEC,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,SAAf;AAA0BC,IAAAA,QAAQ,EAAE;AAApC,GAHK,EAIL;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,UAAf;AAA2BC,IAAAA,QAAQ,EAAE;AAArC,GAJK,EAKL;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,YAAf;AAA6BC,IAAAA,QAAQ,EAAE;AAAvC,GALK,EAML;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,YAAf;AAA6BC,IAAAA,QAAQ,EAAE;AAAvC,GANK,EAOL;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,eAAf;AAAgCC,IAAAA,QAAQ,EAAE;AAA1C,GAPK,EAQL;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,eAAf;AAAgCC,IAAAA,QAAQ,EAAE;AAA1C,GARK,EASL;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,cAAf;AAA+BC,IAAAA,QAAQ,EAAE;AAAzC,GATK,EAUL;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,YAAf;AAA6BC,IAAAA,QAAQ,EAAE;AAAvC,GAVK,EAWL;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,gBAAf;AAAiCC,IAAAA,QAAQ,EAAE;AAA3C,GAXK,EAYL;AAAEF,IAAAA,EAAE,EAAE,EAAN;AAAUC,IAAAA,IAAI,EAAE,aAAhB;AAA+BC,IAAAA,QAAQ,EAAE;AAAzC,GAZK,EAaL;AAAEF,IAAAA,EAAE,EAAE,EAAN;AAAUC,IAAAA,IAAI,EAAE,cAAhB;AAAgCC,IAAAA,QAAQ,EAAE;AAA1C,GAbK,EAcL;AAAEF,IAAAA,EAAE,EAAE,EAAN;AAAUC,IAAAA,IAAI,EAAE,aAAhB;AAA+BC,IAAAA,QAAQ,EAAE;AAAzC,GAdK,CAeL;AAfK;AADY,CAArB;AAoBA,MAAMC,WAAW,GAAGN,WAAW,CAAC;AAC9BI,EAAAA,IAAI,EAAE,QADwB;AAE9BH,EAAAA,YAF8B;AAG9BM,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UAAU,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC7B,YAAMC,UAAU,GAAGD,MAAM,CAACE,OAA1B;AACA,aAAOH,KAAK,CAACI,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACX,EAAL,KAAYQ,UAAnC,CAAP;AACD;AAJO;AAHoB,CAAD,CAA/B;AAWA,OAAO,MAAM;AAAEH,EAAAA;AAAF,IAAiBF,WAAW,CAACS,OAAnC;AACP,OAAO,MAAMC,aAAa,GAAGC,WAAW,CAACC,OAAlC","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n// Предположим, у вас есть массив данных, который нужно управлять\r\n// В реальности вы можете загрузить это с сервера или импортировать из файла\r\n// Для примера возьмем массив данных (можно заменить на вашу структуру)\r\n\r\nconst initialState = {\r\n  items: [\r\n    // Здесь вы можете инициализировать состояние на основе данных\r\n    // например, так:\r\n    { id: 1, name: \"DevLens\", isActive: true },\r\n    { id: 2, name: \"StyleSpy\", isActive: true },\r\n    { id: 3, name: \"SpeedBoost\", isActive: false },\r\n    { id: 4, name: \"JSONWizard\", isActive: true },\r\n    { id: 5, name: \"TabMaster Pro\", isActive: true },\r\n    { id: 6, name: \"ViewportBuddy\", isActive: false },\r\n    { id: 7, name: \"Markup Notes\", isActive: true },\r\n    { id: 8, name: \"GridGuides\", isActive: false },\r\n    { id: 9, name: \"Palette Picker\", isActive: true },\r\n    { id: 10, name: \"LinkChecker\", isActive: true },\r\n    { id: 11, name: \"DOM Snapshot\", isActive: false },\r\n    { id: 12, name: \"ConsolePlus\", isActive: true },\r\n    // добавьте остальные элементы из data.json\r\n  ],\r\n};\r\n\r\nconst removeSlice = createSlice({\r\n  name: \"remove\",\r\n  initialState,\r\n  reducers: {\r\n    removeCard: (state, action) => {\r\n      const idToRemove = action.payload;\r\n      return state.filter((card) => card.id !== idToRemove);\r\n    },\r\n  },\r\n});\r\n\r\nexport const { removeCard } = removeSlice.actions;\r\nexport const removeReducer = toggleSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}