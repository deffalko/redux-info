{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gumar\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\redux-info\\\\src\\\\components\\\\ToggleSwitch.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { toggleItem } from \"../features/toggle/toggle-slice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SwitchContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin: 10px;\n`;\n_c = SwitchContainer;\nconst SwitchTrack = styled.div`\n  width: 50px;\n  height: 30px;\n  background-color: #ccc;\n  border-radius: 15px;\n  position: relative;\n  cursor: pointer;\n  transition: background-color 0.3s;\n  ${props => props.isActive && `\n    background-color: #4caf50;\n  `}\n`;\n_c2 = SwitchTrack;\nconst Knob = styled.div`\n  width: 24px;\n  height: 24px;\n  background-color: white;\n  border-radius: 50%;\n  position: absolute;\n  top: 3px;\n  left: ${props => props.isActive ? \"23px\" : \"3px\"};\n  transition: all 0.3s;\n`;\n_c3 = Knob;\n\nconst ToggleSwitch = _ref => {\n  _s();\n\n  let {\n    id\n  } = _ref;\n  const dispatch = useDispatch(); // Получаем состояние элемента по id\n\n  const item = useSelector(state => state.toggle.items.find(it => it.id === id));\n\n  const handleClick = () => {\n    dispatch(toggleItem(id));\n  };\n\n  if (!item) return null; // или отображать ошибку\n\n  return /*#__PURE__*/_jsxDEV(SwitchContainer, {\n    children: /*#__PURE__*/_jsxDEV(SwitchTrack, {\n      isActive: item.isActive,\n      onClick: handleClick,\n      children: /*#__PURE__*/_jsxDEV(Knob, {\n        isActive: item.isActive\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ToggleSwitch, \"e9YmjAA9N8Pzo7s0hz9uI+D4N9A=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c4 = ToggleSwitch;\nexport default ToggleSwitch;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"SwitchContainer\");\n$RefreshReg$(_c2, \"SwitchTrack\");\n$RefreshReg$(_c3, \"Knob\");\n$RefreshReg$(_c4, \"ToggleSwitch\");","map":{"version":3,"sources":["C:/Users/gumar/OneDrive/Рабочий стол/redux-info/src/components/ToggleSwitch.jsx"],"names":["React","useDispatch","useSelector","styled","toggleItem","SwitchContainer","div","SwitchTrack","props","isActive","Knob","ToggleSwitch","id","dispatch","item","state","toggle","items","find","it","handleClick"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,UAAT,QAA2B,iCAA3B;;AAEA,MAAMC,eAAe,GAAGF,MAAM,CAACG,GAAI;AACnC;AACA;AACA;AACA,CAJA;KAAMD,e;AAMN,MAAME,WAAW,GAAGJ,MAAM,CAACG,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAKE,KAAD,IACAA,KAAK,CAACC,QAAN,IACC;AACL;AACA,GAAI;AACJ,CAbA;MAAMF,W;AAeN,MAAMG,IAAI,GAAGP,MAAM,CAACG,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,UAAWE,KAAD,IAAYA,KAAK,CAACC,QAAN,GAAiB,MAAjB,GAA0B,KAAO;AACvD;AACA,CATA;MAAMC,I;;AAWN,MAAMC,YAAY,GAAG,QAAY;AAAA;;AAAA,MAAX;AAAEC,IAAAA;AAAF,GAAW;AAC/B,QAAMC,QAAQ,GAAGZ,WAAW,EAA5B,CAD+B,CAG/B;;AACA,QAAMa,IAAI,GAAGZ,WAAW,CAAEa,KAAD,IACvBA,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBC,IAAnB,CAAyBC,EAAD,IAAQA,EAAE,CAACP,EAAH,KAAUA,EAA1C,CADsB,CAAxB;;AAIA,QAAMQ,WAAW,GAAG,MAAM;AACxBP,IAAAA,QAAQ,CAACT,UAAU,CAACQ,EAAD,CAAX,CAAR;AACD,GAFD;;AAIA,MAAI,CAACE,IAAL,EAAW,OAAO,IAAP,CAZoB,CAYP;;AAExB,sBACE,QAAC,eAAD;AAAA,2BACE,QAAC,WAAD;AAAa,MAAA,QAAQ,EAAEA,IAAI,CAACL,QAA5B;AAAsC,MAAA,OAAO,EAAEW,WAA/C;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAEN,IAAI,CAACL;AAArB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CArBD;;GAAME,Y;UACaV,W,EAGJC,W;;;MAJTS,Y;AAuBN,eAAeA,YAAf","sourcesContent":["import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { toggleItem } from \"../features/toggle/toggle-slice\";\r\n\r\nconst SwitchContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 10px;\r\n`;\r\n\r\nconst SwitchTrack = styled.div`\r\n  width: 50px;\r\n  height: 30px;\r\n  background-color: #ccc;\r\n  border-radius: 15px;\r\n  position: relative;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n  ${(props) =>\r\n    props.isActive &&\r\n    `\r\n    background-color: #4caf50;\r\n  `}\r\n`;\r\n\r\nconst Knob = styled.div`\r\n  width: 24px;\r\n  height: 24px;\r\n  background-color: white;\r\n  border-radius: 50%;\r\n  position: absolute;\r\n  top: 3px;\r\n  left: ${(props) => (props.isActive ? \"23px\" : \"3px\")};\r\n  transition: all 0.3s;\r\n`;\r\n\r\nconst ToggleSwitch = ({ id }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  // Получаем состояние элемента по id\r\n  const item = useSelector((state) =>\r\n    state.toggle.items.find((it) => it.id === id)\r\n  );\r\n\r\n  const handleClick = () => {\r\n    dispatch(toggleItem(id));\r\n  };\r\n\r\n  if (!item) return null; // или отображать ошибку\r\n\r\n  return (\r\n    <SwitchContainer>\r\n      <SwitchTrack isActive={item.isActive} onClick={handleClick}>\r\n        <Knob isActive={item.isActive} />\r\n      </SwitchTrack>\r\n    </SwitchContainer>\r\n  );\r\n};\r\n\r\nexport default ToggleSwitch;\r\n"]},"metadata":{},"sourceType":"module"}