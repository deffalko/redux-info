{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  search: \"\",\n  region: \"\",\n  type: \"all\",\n  filterStatus: \"\",\n  // или по умолчанию \"all\" или \"\" для фильтрации по статусу\n  remove: [],\n  items: [// Здесь вы можете инициализировать состояние на основе данных\n  // например, так:\n  {\n    id: 1,\n    name: \"DevLens\",\n    isActive: true\n  }, {\n    id: 2,\n    name: \"StyleSpy\",\n    isActive: true\n  }, {\n    id: 3,\n    name: \"SpeedBoost\",\n    isActive: false\n  }, {\n    id: 4,\n    name: \"JSONWizard\",\n    isActive: true\n  }, {\n    id: 5,\n    name: \"TabMaster Pro\",\n    isActive: true\n  }, {\n    id: 6,\n    name: \"ViewportBuddy\",\n    isActive: false\n  }, {\n    id: 7,\n    name: \"Markup Notes\",\n    isActive: true\n  }, {\n    id: 8,\n    name: \"GridGuides\",\n    isActive: false\n  }, {\n    id: 9,\n    name: \"Palette Picker\",\n    isActive: true\n  }, {\n    id: 10,\n    name: \"LinkChecker\",\n    isActive: true\n  }, {\n    id: 11,\n    name: \"DOM Snapshot\",\n    isActive: false\n  }, {\n    id: 12,\n    name: \"ConsolePlus\",\n    isActive: true\n  } // добавьте остальные элементы из data.json\n  ]\n};\nconst controlSlice = createSlice({\n  name: \"@@controls\",\n  initialState,\n  reducers: {\n    setSearch: (state, action) => {\n      state.search = action.payload;\n    },\n    setRegion: (state, action) => {\n      state.region = action.payload;\n    },\n    setType: (state, action) => {\n      state.type = action.payload;\n    },\n    setRemove: (state, action) => {\n      // state.remove = action.payload;\n      if (!state.remove.includes(action.payload)) {\n        state.remove.push(action.payload);\n      }\n    },\n    clearRemove: state => {\n      state.remove = [];\n    },\n    // setRemove: (state, action) => {\n    //   // return state.items.filter((card) => card.id !== action.payload);\n    //   const idToRemove = action.payload;\n    //   state.items = state.items.filter((card) => card.id !== idToRemove);\n    // },\n    setFilterStatus: (state, action) => {\n      state.filterStatus = action.payload;\n    },\n    clearControls: () => initialState\n  }\n});\nexport const {\n  setRegion,\n  setSearch,\n  setType,\n  setRemove,\n  setFilterStatus,\n  clearControls\n} = controlSlice.actions;\nexport const controlsReducer = controlSlice.reducer;\nexport const selectSearch = state => state.controls.search;\nexport const selectType = state => state.controls.type;\nexport const selectRegion = state => state.controls.region;\nexport const selectFilterStatus = state => state.controls.filterStatus;\nexport const selectControls = state => state.controls;\nexport const selectRemove = state => state.controls.remove;","map":{"version":3,"sources":["C:/Users/gumar/OneDrive/Рабочий стол/redux-info/src/features/controls/controls-slice.js"],"names":["createSlice","initialState","search","region","type","filterStatus","remove","items","id","name","isActive","controlSlice","reducers","setSearch","state","action","payload","setRegion","setType","setRemove","includes","push","clearRemove","setFilterStatus","clearControls","actions","controlsReducer","reducer","selectSearch","controls","selectType","selectRegion","selectFilterStatus","selectControls","selectRemove"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  search: \"\",\r\n  region: \"\",\r\n  type: \"all\",\r\n  filterStatus: \"\", // или по умолчанию \"all\" или \"\" для фильтрации по статусу\r\n  remove: [],\r\n  items: [\r\n    // Здесь вы можете инициализировать состояние на основе данных\r\n    // например, так:\r\n    { id: 1, name: \"DevLens\", isActive: true },\r\n    { id: 2, name: \"StyleSpy\", isActive: true },\r\n    { id: 3, name: \"SpeedBoost\", isActive: false },\r\n    { id: 4, name: \"JSONWizard\", isActive: true },\r\n    { id: 5, name: \"TabMaster Pro\", isActive: true },\r\n    { id: 6, name: \"ViewportBuddy\", isActive: false },\r\n    { id: 7, name: \"Markup Notes\", isActive: true },\r\n    { id: 8, name: \"GridGuides\", isActive: false },\r\n    { id: 9, name: \"Palette Picker\", isActive: true },\r\n    { id: 10, name: \"LinkChecker\", isActive: true },\r\n    { id: 11, name: \"DOM Snapshot\", isActive: false },\r\n    { id: 12, name: \"ConsolePlus\", isActive: true },\r\n    // добавьте остальные элементы из data.json\r\n  ],\r\n};\r\n\r\nconst controlSlice = createSlice({\r\n  name: \"@@controls\",\r\n  initialState,\r\n  reducers: {\r\n    setSearch: (state, action) => {\r\n      state.search = action.payload;\r\n    },\r\n    setRegion: (state, action) => {\r\n      state.region = action.payload;\r\n    },\r\n    setType: (state, action) => {\r\n      state.type = action.payload;\r\n    },\r\n    setRemove: (state, action) => {\r\n      // state.remove = action.payload;\r\n      if (!state.remove.includes(action.payload)) {\r\n        state.remove.push(action.payload);\r\n      }\r\n    },\r\n    clearRemove: (state) => {\r\n      state.remove = [];\r\n    },\r\n    // setRemove: (state, action) => {\r\n    //   // return state.items.filter((card) => card.id !== action.payload);\r\n    //   const idToRemove = action.payload;\r\n    //   state.items = state.items.filter((card) => card.id !== idToRemove);\r\n    // },\r\n    setFilterStatus: (state, action) => {\r\n      state.filterStatus = action.payload;\r\n    },\r\n    clearControls: () => initialState,\r\n  },\r\n});\r\n\r\nexport const {\r\n  setRegion,\r\n  setSearch,\r\n  setType,\r\n  setRemove,\r\n  setFilterStatus,\r\n  clearControls,\r\n} = controlSlice.actions;\r\nexport const controlsReducer = controlSlice.reducer;\r\n\r\nexport const selectSearch = (state) => state.controls.search;\r\nexport const selectType = (state) => state.controls.type;\r\nexport const selectRegion = (state) => state.controls.region;\r\nexport const selectFilterStatus = (state) => state.controls.filterStatus;\r\nexport const selectControls = (state) => state.controls;\r\nexport const selectRemove = (state) => state.controls.remove;\r\n"]},"metadata":{},"sourceType":"module"}