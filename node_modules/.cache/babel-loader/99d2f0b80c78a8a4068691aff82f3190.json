{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gumar\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\redux-countries-refactoring\\\\src\\\\features\\\\countries\\\\CountryList.jsx\",\n    _s = $RefreshSig$();\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { List } from \"./src/components/List\";\nimport { Card } from \"/src\\featurescountries\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { selectControls } from \"../controls/controls-slice\";\nimport { loadCountries, selectCountriesInfo, selectVisibleCountries } from \"./countries-slice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CountryList = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const controls = useSelector(selectControls);\n  const countries = useSelector(state => selectVisibleCountries(state, controls));\n  const {\n    status,\n    error,\n    qty\n  } = useSelector(selectCountriesInfo);\n  useEffect(() => {\n    if (!qty) {\n      dispatch(loadCountries());\n    }\n  }, [qty, dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [error && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Can't fetch data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this), status === \"loading\" && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 32\n    }, this), status === \"received\" && /*#__PURE__*/_jsxDEV(List, {\n      children: countries.map(c => {\n        const countryInfo = {\n          img: c.flags.png,\n          name: c.name,\n          info: [{\n            title: \"Population\",\n            description: c.population.toLocaleString()\n          }, {\n            title: \"Region\",\n            description: c.region\n          }, {\n            title: \"Capital\",\n            description: c.capital\n          }]\n        };\n        return /*#__PURE__*/_jsxDEV(Card, {\n          onClick: () => navigate(`/country/${c.name}`),\n          ...countryInfo\n        }, c.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CountryList, \"OD89Kh1JliYeTW7n6YT93Nj9ZPE=\", false, function () {\n  return [useNavigate, useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = CountryList;\nexport { CountryList };\n\nvar _c;\n\n$RefreshReg$(_c, \"CountryList\");","map":{"version":3,"sources":["C:/Users/gumar/OneDrive/Рабочий стол/redux-countries-refactoring/src/features/countries/CountryList.jsx"],"names":["useDispatch","useSelector","List","Card","useNavigate","useEffect","selectControls","loadCountries","selectCountriesInfo","selectVisibleCountries","CountryList","navigate","dispatch","controls","countries","state","status","error","qty","map","c","countryInfo","img","flags","png","name","info","title","description","population","toLocaleString","region","capital"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,IAAT,QAAqB,uBAArB;AACA,SAASC,IAAT,QAAqB,wBAArB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,cAAT,QAA+B,4BAA/B;AACA,SACEC,aADF,EAEEC,mBAFF,EAGEC,sBAHF,QAIO,mBAJP;;;AAMA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AAEA,QAAMQ,QAAQ,GAAGZ,WAAW,EAA5B;AACA,QAAMa,QAAQ,GAAGZ,WAAW,CAACK,cAAD,CAA5B;AACA,QAAMQ,SAAS,GAAGb,WAAW,CAAEc,KAAD,IAC5BN,sBAAsB,CAACM,KAAD,EAAQF,QAAR,CADK,CAA7B;AAGA,QAAM;AAAEG,IAAAA,MAAF;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA;AAAjB,MAAyBjB,WAAW,CAACO,mBAAD,CAA1C;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACa,GAAL,EAAU;AACRN,MAAAA,QAAQ,CAACL,aAAa,EAAd,CAAR;AACD;AACF,GAJQ,EAIN,CAACW,GAAD,EAAMN,QAAN,CAJM,CAAT;AAMA,sBACE;AAAA,eACGK,KAAK,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADZ,EAEGD,MAAM,KAAK,SAAX,iBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAF3B,EAIGA,MAAM,KAAK,UAAX,iBACC,QAAC,IAAD;AAAA,gBACGF,SAAS,CAACK,GAAV,CAAeC,CAAD,IAAO;AACpB,cAAMC,WAAW,GAAG;AAClBC,UAAAA,GAAG,EAAEF,CAAC,CAACG,KAAF,CAAQC,GADK;AAElBC,UAAAA,IAAI,EAAEL,CAAC,CAACK,IAFU;AAGlBC,UAAAA,IAAI,EAAE,CACJ;AACEC,YAAAA,KAAK,EAAE,YADT;AAEEC,YAAAA,WAAW,EAAER,CAAC,CAACS,UAAF,CAAaC,cAAb;AAFf,WADI,EAKJ;AACEH,YAAAA,KAAK,EAAE,QADT;AAEEC,YAAAA,WAAW,EAAER,CAAC,CAACW;AAFjB,WALI,EASJ;AACEJ,YAAAA,KAAK,EAAE,SADT;AAEEC,YAAAA,WAAW,EAAER,CAAC,CAACY;AAFjB,WATI;AAHY,SAApB;AAmBA,4BACE,QAAC,IAAD;AAEE,UAAA,OAAO,EAAE,MAAMrB,QAAQ,CAAE,YAAWS,CAAC,CAACK,IAAK,EAApB,CAFzB;AAAA,aAGMJ;AAHN,WACOD,CAAC,CAACK,IADT;AAAA;AAAA;AAAA;AAAA,gBADF;AAOD,OA3BA;AADH;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuCD,CAvDD;;GAAMf,W;UACaN,W,EAEAJ,W,EACAC,W,EACCA,W,EAGaA,W;;;KAR3BS,W;AAyDN,SAASA,WAAT","sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\r\nimport { List } from \"./src/components/List\";\r\nimport { Card } from \"/src\\featurescountries\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport { selectControls } from \"../controls/controls-slice\";\r\nimport {\r\n  loadCountries,\r\n  selectCountriesInfo,\r\n  selectVisibleCountries,\r\n} from \"./countries-slice\";\r\n\r\nconst CountryList = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const dispatch = useDispatch();\r\n  const controls = useSelector(selectControls);\r\n  const countries = useSelector((state) =>\r\n    selectVisibleCountries(state, controls)\r\n  );\r\n  const { status, error, qty } = useSelector(selectCountriesInfo);\r\n\r\n  useEffect(() => {\r\n    if (!qty) {\r\n      dispatch(loadCountries());\r\n    }\r\n  }, [qty, dispatch]);\r\n\r\n  return (\r\n    <div>\r\n      {error && <h2>Can't fetch data</h2>}\r\n      {status === \"loading\" && <h2>Loading...</h2>}\r\n\r\n      {status === \"received\" && (\r\n        <List>\r\n          {countries.map((c) => {\r\n            const countryInfo = {\r\n              img: c.flags.png,\r\n              name: c.name,\r\n              info: [\r\n                {\r\n                  title: \"Population\",\r\n                  description: c.population.toLocaleString(),\r\n                },\r\n                {\r\n                  title: \"Region\",\r\n                  description: c.region,\r\n                },\r\n                {\r\n                  title: \"Capital\",\r\n                  description: c.capital,\r\n                },\r\n              ],\r\n            };\r\n\r\n            return (\r\n              <Card\r\n                key={c.name}\r\n                onClick={() => navigate(`/country/${c.name}`)}\r\n                {...countryInfo}\r\n              />\r\n            );\r\n          })}\r\n        </List>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { CountryList };\r\n"]},"metadata":{},"sourceType":"module"}