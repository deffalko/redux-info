{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\"; // Предположим, у вас есть массив данных, который нужно управлять\n// В реальности вы можете загрузить это с сервера или импортировать из файла\n// Для примера возьмем массив данных (можно заменить на вашу структуру)\n\nconst initialState = {\n  items: [// Здесь вы можете инициализировать состояние на основе данных\n  // например, так:\n  {\n    id: 1,\n    name: \"DevLens\",\n    isActive: true\n  }, {\n    id: 2,\n    name: \"StyleSpy\",\n    isActive: true\n  }, {\n    id: 3,\n    name: \"SpeedBoost\",\n    isActive: false\n  } // добавьте остальные элементы из data.json\n  ]\n};\nconst toggleSlice = createSlice({\n  name: \"toggle\",\n  initialState,\n  reducers: {\n    toggleItem: (state, action) => {\n      const itemId = action.payload;\n      const item = state.items.find(it => it.id === itemId);\n\n      if (item) {\n        item.isActive = !item.isActive;\n      }\n    }\n  }\n});\nexport const {\n  toggleItem\n} = toggleSlice.actions;\nexport const toggleReducer = toggleSlice.reducer;","map":{"version":3,"sources":["C:/Users/gumar/OneDrive/Рабочий стол/redux-info/src/features/toggle/toggle-slice.js"],"names":["createSlice","initialState","items","id","name","isActive","toggleSlice","reducers","toggleItem","state","action","itemId","payload","item","find","it","actions","toggleReducer","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B,C,CAEA;AACA;AACA;;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,CACL;AACA;AACA;AAAEC,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,SAAf;AAA0BC,IAAAA,QAAQ,EAAE;AAApC,GAHK,EAIL;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,UAAf;AAA2BC,IAAAA,QAAQ,EAAE;AAArC,GAJK,EAKL;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,YAAf;AAA6BC,IAAAA,QAAQ,EAAE;AAAvC,GALK,CAML;AANK;AADY,CAArB;AAWA,MAAMC,WAAW,GAAGN,WAAW,CAAC;AAC9BI,EAAAA,IAAI,EAAE,QADwB;AAE9BH,EAAAA,YAF8B;AAG9BM,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UAAU,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC7B,YAAMC,MAAM,GAAGD,MAAM,CAACE,OAAtB;AACA,YAAMC,IAAI,GAAGJ,KAAK,CAACP,KAAN,CAAYY,IAAZ,CAAkBC,EAAD,IAAQA,EAAE,CAACZ,EAAH,KAAUQ,MAAnC,CAAb;;AACA,UAAIE,IAAJ,EAAU;AACRA,QAAAA,IAAI,CAACR,QAAL,GAAgB,CAACQ,IAAI,CAACR,QAAtB;AACD;AACF;AAPO;AAHoB,CAAD,CAA/B;AAcA,OAAO,MAAM;AAAEG,EAAAA;AAAF,IAAiBF,WAAW,CAACU,OAAnC;AACP,OAAO,MAAMC,aAAa,GAAGX,WAAW,CAACY,OAAlC","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n// Предположим, у вас есть массив данных, который нужно управлять\r\n// В реальности вы можете загрузить это с сервера или импортировать из файла\r\n// Для примера возьмем массив данных (можно заменить на вашу структуру)\r\n\r\nconst initialState = {\r\n  items: [\r\n    // Здесь вы можете инициализировать состояние на основе данных\r\n    // например, так:\r\n    { id: 1, name: \"DevLens\", isActive: true },\r\n    { id: 2, name: \"StyleSpy\", isActive: true },\r\n    { id: 3, name: \"SpeedBoost\", isActive: false },\r\n    // добавьте остальные элементы из data.json\r\n  ],\r\n};\r\n\r\nconst toggleSlice = createSlice({\r\n  name: \"toggle\",\r\n  initialState,\r\n  reducers: {\r\n    toggleItem: (state, action) => {\r\n      const itemId = action.payload;\r\n      const item = state.items.find((it) => it.id === itemId);\r\n      if (item) {\r\n        item.isActive = !item.isActive;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const { toggleItem } = toggleSlice.actions;\r\nexport const toggleReducer = toggleSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}