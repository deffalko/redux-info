{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gumar\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\redux-info\\\\src\\\\components\\\\ToggleSwitch.jsx\",\n    _s = $RefreshSig$();\n\n// import React from \"react\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import styled from \"styled-components\";\n// import { toggleItem } from \"../features/toggle/toggle-slice\";\n// const SwitchContainer = styled.div`\n//   display: flex;\n//   align-items: center;\n//   margin: 10px;\n// `;\n// const SwitchTrack = styled.div`\n//   width: 50px;\n//   height: 30px;\n//   background-color: #ccc;\n//   border-radius: 15px;\n//   position: relative;\n//   cursor: pointer;\n//   transition: background-color 0.3s;\n//   ${(props) =>\n//     props.isActive &&\n//     `\n//     background-color: #4caf50;\n//   `}\n// `;\n// const Knob = styled.div`\n//   width: 24px;\n//   height: 24px;\n//   background-color: white;\n//   border-radius: 50%;\n//   position: absolute;\n//   top: 3px;\n//   left: ${(props) => (props.isActive ? \"23px\" : \"3px\")};\n//   transition: all 0.3s;\n// `;\n// const ToggleSwitch = ({ id }) => {\n//   const dispatch = useDispatch();\n//   // Получаем состояние элемента по id\n//   const item = useSelector((state) =>\n//     state.toggle.items.find((it) => it.id === id)\n//   );\n//   const handleClick = () => {\n//     dispatch(toggleItem(id));\n//   };\n//   if (!item) return null; // или отображать ошибку\n//   return (\n//     <SwitchContainer>\n//       <SwitchTrack isActive={item.isActive} onClick={handleClick}>\n//         <Knob isActive={item.isActive} />\n//       </SwitchTrack>\n//     </SwitchContainer>\n//   );\n// };\n// export default ToggleSwitch;\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { toggleItem } from \"../features/toggle/toggle-slice\";\nimport data from \"./data.json\"; // импорт данных\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SwitchContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin: 10px;\n`;\n_c = SwitchContainer;\nconst SwitchTrack = styled.div`\n  width: 50px;\n  height: 30px;\n  background-color: #ccc;\n  border-radius: 15px;\n  position: relative;\n  cursor: pointer;\n  transition: background-color 0.3s;\n  ${props => props.isActive && `\n    background-color: #4caf50;\n  `}\n`;\n_c2 = SwitchTrack;\nconst Knob = styled.div`\n  width: 24px;\n  height: 24px;\n  background-color: white;\n  border-radius: 50%;\n  position: absolute;\n  top: 3px;\n  left: ${props => props.isActive ? \"23px\" : \"3px\"};\n  transition: all 0.3s;\n`;\n_c3 = Knob;\n\nconst ToggleSwitch = _ref => {\n  _s();\n\n  let {\n    id\n  } = _ref;\n  const dispatch = useDispatch();\n  const activeIds = useSelector(state => state.toggle.activeIds);\n  const isActive = activeIds.includes(id);\n\n  const handleClick = () => {\n    dispatch(toggleItem(id));\n  }; // Можно получить название или описание из data, если нужно\n\n\n  const itemData = data.find(item => item.id === id);\n  return /*#__PURE__*/_jsxDEV(SwitchContainer, {\n    children: [/*#__PURE__*/_jsxDEV(SwitchTrack, {\n      isActive: isActive,\n      onClick: handleClick,\n      children: /*#__PURE__*/_jsxDEV(Knob, {\n        isActive: isActive\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginLeft: \"10px\"\n      },\n      children: itemData === null || itemData === void 0 ? void 0 : itemData.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ToggleSwitch, \"HEJ5rj8c2XxREz6zeyP4PpNBVhA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c4 = ToggleSwitch;\nexport default ToggleSwitch;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"SwitchContainer\");\n$RefreshReg$(_c2, \"SwitchTrack\");\n$RefreshReg$(_c3, \"Knob\");\n$RefreshReg$(_c4, \"ToggleSwitch\");","map":{"version":3,"sources":["C:/Users/gumar/OneDrive/Рабочий стол/redux-info/src/components/ToggleSwitch.jsx"],"names":["React","useDispatch","useSelector","styled","toggleItem","data","SwitchContainer","div","SwitchTrack","props","isActive","Knob","ToggleSwitch","id","dispatch","activeIds","state","toggle","includes","handleClick","itemData","find","item","marginLeft","name"],"mappings":";;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,UAAT,QAA2B,iCAA3B;AACA,OAAOC,IAAP,MAAiB,aAAjB,C,CAAgC;;;AAEhC,MAAMC,eAAe,GAAGH,MAAM,CAACI,GAAI;AACnC;AACA;AACA;AACA,CAJA;KAAMD,e;AAMN,MAAME,WAAW,GAAGL,MAAM,CAACI,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAKE,KAAD,IACAA,KAAK,CAACC,QAAN,IACC;AACL;AACA,GAAI;AACJ,CAbA;MAAMF,W;AAeN,MAAMG,IAAI,GAAGR,MAAM,CAACI,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,UAAWE,KAAD,IAAYA,KAAK,CAACC,QAAN,GAAiB,MAAjB,GAA0B,KAAO;AACvD;AACA,CATA;MAAMC,I;;AAWN,MAAMC,YAAY,GAAG,QAAY;AAAA;;AAAA,MAAX;AAAEC,IAAAA;AAAF,GAAW;AAC/B,QAAMC,QAAQ,GAAGb,WAAW,EAA5B;AAEA,QAAMc,SAAS,GAAGb,WAAW,CAAEc,KAAD,IAAWA,KAAK,CAACC,MAAN,CAAaF,SAAzB,CAA7B;AACA,QAAML,QAAQ,GAAGK,SAAS,CAACG,QAAV,CAAmBL,EAAnB,CAAjB;;AAEA,QAAMM,WAAW,GAAG,MAAM;AACxBL,IAAAA,QAAQ,CAACV,UAAU,CAACS,EAAD,CAAX,CAAR;AACD,GAFD,CAN+B,CAU/B;;;AACA,QAAMO,QAAQ,GAAGf,IAAI,CAACgB,IAAL,CAAWC,IAAD,IAAUA,IAAI,CAACT,EAAL,KAAYA,EAAhC,CAAjB;AAEA,sBACE,QAAC,eAAD;AAAA,4BACE,QAAC,WAAD;AAAa,MAAA,QAAQ,EAAEH,QAAvB;AAAiC,MAAA,OAAO,EAAES,WAA1C;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAET;AAAhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAK,MAAA,KAAK,EAAE;AAAEa,QAAAA,UAAU,EAAE;AAAd,OAAZ;AAAA,gBAAqCH,QAArC,aAAqCA,QAArC,uBAAqCA,QAAQ,CAAEI;AAA/C;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAtBD;;GAAMZ,Y;UACaX,W,EAECC,W;;;MAHdU,Y;AAwBN,eAAeA,YAAf","sourcesContent":["// import React from \"react\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import styled from \"styled-components\";\r\n// import { toggleItem } from \"../features/toggle/toggle-slice\";\r\n\r\n// const SwitchContainer = styled.div`\r\n//   display: flex;\r\n//   align-items: center;\r\n//   margin: 10px;\r\n// `;\r\n\r\n// const SwitchTrack = styled.div`\r\n//   width: 50px;\r\n//   height: 30px;\r\n//   background-color: #ccc;\r\n//   border-radius: 15px;\r\n//   position: relative;\r\n//   cursor: pointer;\r\n//   transition: background-color 0.3s;\r\n//   ${(props) =>\r\n//     props.isActive &&\r\n//     `\r\n//     background-color: #4caf50;\r\n//   `}\r\n// `;\r\n\r\n// const Knob = styled.div`\r\n//   width: 24px;\r\n//   height: 24px;\r\n//   background-color: white;\r\n//   border-radius: 50%;\r\n//   position: absolute;\r\n//   top: 3px;\r\n//   left: ${(props) => (props.isActive ? \"23px\" : \"3px\")};\r\n//   transition: all 0.3s;\r\n// `;\r\n\r\n// const ToggleSwitch = ({ id }) => {\r\n//   const dispatch = useDispatch();\r\n\r\n//   // Получаем состояние элемента по id\r\n//   const item = useSelector((state) =>\r\n//     state.toggle.items.find((it) => it.id === id)\r\n//   );\r\n\r\n//   const handleClick = () => {\r\n//     dispatch(toggleItem(id));\r\n//   };\r\n\r\n//   if (!item) return null; // или отображать ошибку\r\n\r\n//   return (\r\n//     <SwitchContainer>\r\n//       <SwitchTrack isActive={item.isActive} onClick={handleClick}>\r\n//         <Knob isActive={item.isActive} />\r\n//       </SwitchTrack>\r\n//     </SwitchContainer>\r\n//   );\r\n// };\r\n\r\n// export default ToggleSwitch;\r\n\r\nimport React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { toggleItem } from \"../features/toggle/toggle-slice\";\r\nimport data from \"./data.json\"; // импорт данных\r\n\r\nconst SwitchContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 10px;\r\n`;\r\n\r\nconst SwitchTrack = styled.div`\r\n  width: 50px;\r\n  height: 30px;\r\n  background-color: #ccc;\r\n  border-radius: 15px;\r\n  position: relative;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n  ${(props) =>\r\n    props.isActive &&\r\n    `\r\n    background-color: #4caf50;\r\n  `}\r\n`;\r\n\r\nconst Knob = styled.div`\r\n  width: 24px;\r\n  height: 24px;\r\n  background-color: white;\r\n  border-radius: 50%;\r\n  position: absolute;\r\n  top: 3px;\r\n  left: ${(props) => (props.isActive ? \"23px\" : \"3px\")};\r\n  transition: all 0.3s;\r\n`;\r\n\r\nconst ToggleSwitch = ({ id }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const activeIds = useSelector((state) => state.toggle.activeIds);\r\n  const isActive = activeIds.includes(id);\r\n\r\n  const handleClick = () => {\r\n    dispatch(toggleItem(id));\r\n  };\r\n\r\n  // Можно получить название или описание из data, если нужно\r\n  const itemData = data.find((item) => item.id === id);\r\n\r\n  return (\r\n    <SwitchContainer>\r\n      <SwitchTrack isActive={isActive} onClick={handleClick}>\r\n        <Knob isActive={isActive} />\r\n      </SwitchTrack>\r\n      {/* Можно отображать название или описание */}\r\n      <div style={{ marginLeft: \"10px\" }}>{itemData?.name}</div>\r\n    </SwitchContainer>\r\n  );\r\n};\r\n\r\nexport default ToggleSwitch;\r\n"]},"metadata":{},"sourceType":"module"}