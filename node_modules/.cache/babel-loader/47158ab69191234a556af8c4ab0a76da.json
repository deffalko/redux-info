{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gumar\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\redux-countries\\\\src\\\\pages\\\\HomePage.jsx\",\n    _s = $RefreshSig$();\n\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { List } from \"../components/List\";\nimport { Card } from \"../components/Card\";\nimport { Controls } from \"../components/Controls\";\nimport { selectCountriesInfo, selectVisibleCountries } from \"../store/countries/countries-selectors\";\nimport { loadCountries } from \"../store/countries/counrties-actions\";\nimport { selectSearch } from \"../store/controls/controls-selectors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const HomePage = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const search = useSelector(selectSearch);\n  const countries = useSelector(state => selectVisibleCountries(state, {\n    search\n  }));\n  const {\n    status,\n    error,\n    qty\n  } = useSelector(selectCountriesInfo);\n  useEffect(() => {\n    if (!qty) {\n      dispatch(loadCountries());\n    }\n  }, [qty, dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Can't fetch data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this), status == \"loading\" && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 31\n    }, this), status === \"received\" && /*#__PURE__*/_jsxDEV(List, {\n      children: countries.map(c => {\n        const countryInfo = {\n          img: c.flags.png,\n          name: c.name,\n          info: [{\n            title: \"Population\",\n            description: c.population.toLocaleString()\n          }, {\n            title: \"Region\",\n            description: c.region\n          }, {\n            title: \"Capital\",\n            description: c.capital\n          }]\n        };\n        return /*#__PURE__*/_jsxDEV(Card, {\n          onClick: () => navigate(`/country/${c.name}`),\n          ...countryInfo\n        }, c.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(HomePage, \"pss+8xQ+5SjKBdFpnsIwco2QabM=\", false, function () {\n  return [useNavigate, useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["C:/Users/gumar/OneDrive/Рабочий стол/redux-countries/src/pages/HomePage.jsx"],"names":["useNavigate","useDispatch","useSelector","useEffect","List","Card","Controls","selectCountriesInfo","selectVisibleCountries","loadCountries","selectSearch","HomePage","navigate","dispatch","search","countries","state","status","error","qty","map","c","countryInfo","img","flags","png","name","info","title","description","population","toLocaleString","region","capital"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,OAA1B;AAEA,SAASC,IAAT,QAAqB,oBAArB;AACA,SAASC,IAAT,QAAqB,oBAArB;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,SACEC,mBADF,EAEEC,sBAFF,QAGO,wCAHP;AAIA,SAASC,aAAT,QAA8B,sCAA9B;AACA,SAASC,YAAT,QAA6B,sCAA7B;;;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAC5B,QAAMC,QAAQ,GAAGZ,WAAW,EAA5B;AAEA,QAAMa,QAAQ,GAAGZ,WAAW,EAA5B;AACA,QAAMa,MAAM,GAAGZ,WAAW,CAACQ,YAAD,CAA1B;AACA,QAAMK,SAAS,GAAGb,WAAW,CAAEc,KAAD,IAC5BR,sBAAsB,CAACQ,KAAD,EAAQ;AAAEF,IAAAA;AAAF,GAAR,CADK,CAA7B;AAGA,QAAM;AAAEG,IAAAA,MAAF;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA;AAAjB,MAAyBjB,WAAW,CAACK,mBAAD,CAA1C;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACgB,GAAL,EAAU;AACRN,MAAAA,QAAQ,CAACJ,aAAa,EAAd,CAAR;AACD;AACF,GAJQ,EAIN,CAACU,GAAD,EAAMN,QAAN,CAJM,CAAT;AAMA,sBACE;AAAA,4BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YADF,EAGGK,KAAK,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHZ,EAIGD,MAAM,IAAI,SAAV,iBAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJ1B,EAMGA,MAAM,KAAK,UAAX,iBACC,QAAC,IAAD;AAAA,gBACGF,SAAS,CAACK,GAAV,CAAeC,CAAD,IAAO;AACpB,cAAMC,WAAW,GAAG;AAClBC,UAAAA,GAAG,EAAEF,CAAC,CAACG,KAAF,CAAQC,GADK;AAElBC,UAAAA,IAAI,EAAEL,CAAC,CAACK,IAFU;AAGlBC,UAAAA,IAAI,EAAE,CACJ;AACEC,YAAAA,KAAK,EAAE,YADT;AAEEC,YAAAA,WAAW,EAAER,CAAC,CAACS,UAAF,CAAaC,cAAb;AAFf,WADI,EAKJ;AACEH,YAAAA,KAAK,EAAE,QADT;AAEEC,YAAAA,WAAW,EAAER,CAAC,CAACW;AAFjB,WALI,EASJ;AACEJ,YAAAA,KAAK,EAAE,SADT;AAEEC,YAAAA,WAAW,EAAER,CAAC,CAACY;AAFjB,WATI;AAHY,SAApB;AAmBA,4BACE,QAAC,IAAD;AAEE,UAAA,OAAO,EAAE,MAAMrB,QAAQ,CAAE,YAAWS,CAAC,CAACK,IAAK,EAApB,CAFzB;AAAA,aAGMJ;AAHN,WACOD,CAAC,CAACK,IADT;AAAA;AAAA;AAAA;AAAA,gBADF;AAOD,OA3BA;AADH;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA,kBADF;AAyCD,CAzDM;;GAAMf,Q;UACMX,W,EAEAC,W,EACFC,W,EACGA,W,EAGaA,W;;;KARpBS,Q","sourcesContent":["import { useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\n\nimport { List } from \"../components/List\";\nimport { Card } from \"../components/Card\";\nimport { Controls } from \"../components/Controls\";\nimport {\n  selectCountriesInfo,\n  selectVisibleCountries,\n} from \"../store/countries/countries-selectors\";\nimport { loadCountries } from \"../store/countries/counrties-actions\";\nimport { selectSearch } from \"../store/controls/controls-selectors\";\n\nexport const HomePage = () => {\n  const navigate = useNavigate();\n\n  const dispatch = useDispatch();\n  const search = useSelector(selectSearch);\n  const countries = useSelector((state) =>\n    selectVisibleCountries(state, { search })\n  );\n  const { status, error, qty } = useSelector(selectCountriesInfo);\n\n  useEffect(() => {\n    if (!qty) {\n      dispatch(loadCountries());\n    }\n  }, [qty, dispatch]);\n\n  return (\n    <>\n      <Controls />\n\n      {error && <h2>Can't fetch data</h2>}\n      {status == \"loading\" && <h2>Loading...</h2>}\n\n      {status === \"received\" && (\n        <List>\n          {countries.map((c) => {\n            const countryInfo = {\n              img: c.flags.png,\n              name: c.name,\n              info: [\n                {\n                  title: \"Population\",\n                  description: c.population.toLocaleString(),\n                },\n                {\n                  title: \"Region\",\n                  description: c.region,\n                },\n                {\n                  title: \"Capital\",\n                  description: c.capital,\n                },\n              ],\n            };\n\n            return (\n              <Card\n                key={c.name}\n                onClick={() => navigate(`/country/${c.name}`)}\n                {...countryInfo}\n              />\n            );\n          })}\n        </List>\n      )}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}