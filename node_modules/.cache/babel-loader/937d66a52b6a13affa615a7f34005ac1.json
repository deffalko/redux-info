{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { selectControls } from \"../controls/controls-slice\";\nimport { loadCountries, selectCountriesInfo, selectVisibleCountries } from \"./countries-slice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nexport const useCountries = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const controls = useSelector(selectControls); // const countries = useSelector((state) =>\n  //   selectVisibleCountries(state, controls)\n  // );\n\n  const countries = useSelector(state => selectVisibleCountries(state, {\n    search: controls.search,\n    region: controls.region,\n    filterStatus: controls.filterStatus,\n    remove: controls.remove\n  }));\n  const {\n    status,\n    error,\n    qty\n  } = useSelector(selectCountriesInfo);\n  useEffect(() => {\n    if (!qty) {\n      dispatch(loadCountries());\n    }\n  }, [qty, dispatch]);\n  return [countries, {\n    status,\n    error,\n    qty\n  }];\n};\n\n_s(useCountries, \"hnAYbHhjJ68hlSiC5ve1QLckAu4=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});","map":{"version":3,"sources":["C:/Users/gumar/OneDrive/Рабочий стол/redux-info/src/features/countries/useCountries.js"],"names":["useEffect","selectControls","loadCountries","selectCountriesInfo","selectVisibleCountries","useDispatch","useSelector","useCountries","dispatch","controls","countries","state","search","region","filterStatus","remove","status","error","qty"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,cAAT,QAA+B,4BAA/B;AACA,SACEC,aADF,EAEEC,mBAFF,EAGEC,sBAHF,QAIO,mBAJP;AAKA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAChC,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AACA,QAAMI,QAAQ,GAAGH,WAAW,CAACL,cAAD,CAA5B,CAFgC,CAGhC;AACA;AACA;;AACA,QAAMS,SAAS,GAAGJ,WAAW,CAAEK,KAAD,IAC5BP,sBAAsB,CAACO,KAAD,EAAQ;AAC5BC,IAAAA,MAAM,EAAEH,QAAQ,CAACG,MADW;AAE5BC,IAAAA,MAAM,EAAEJ,QAAQ,CAACI,MAFW;AAG5BC,IAAAA,YAAY,EAAEL,QAAQ,CAACK,YAHK;AAI5BC,IAAAA,MAAM,EAAEN,QAAQ,CAACM;AAJW,GAAR,CADK,CAA7B;AAQA,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA;AAAjB,MAAyBZ,WAAW,CAACH,mBAAD,CAA1C;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACkB,GAAL,EAAU;AACRV,MAAAA,QAAQ,CAACN,aAAa,EAAd,CAAR;AACD;AACF,GAJQ,EAIN,CAACgB,GAAD,EAAMV,QAAN,CAJM,CAAT;AAKA,SAAO,CAACE,SAAD,EAAY;AAAEM,IAAAA,MAAF;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA;AAAjB,GAAZ,CAAP;AACD,CAtBM;;GAAMX,Y;UACMF,W,EACAC,W,EAICA,W,EAQaA,W","sourcesContent":["import { useEffect } from \"react\";\r\nimport { selectControls } from \"../controls/controls-slice\";\r\nimport {\r\n  loadCountries,\r\n  selectCountriesInfo,\r\n  selectVisibleCountries,\r\n} from \"./countries-slice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nexport const useCountries = () => {\r\n  const dispatch = useDispatch();\r\n  const controls = useSelector(selectControls);\r\n  // const countries = useSelector((state) =>\r\n  //   selectVisibleCountries(state, controls)\r\n  // );\r\n  const countries = useSelector((state) =>\r\n    selectVisibleCountries(state, {\r\n      search: controls.search,\r\n      region: controls.region,\r\n      filterStatus: controls.filterStatus,\r\n      remove: controls.remove,\r\n    })\r\n  );\r\n  const { status, error, qty } = useSelector(selectCountriesInfo);\r\n\r\n  useEffect(() => {\r\n    if (!qty) {\r\n      dispatch(loadCountries());\r\n    }\r\n  }, [qty, dispatch]);\r\n  return [countries, { status, error, qty }];\r\n};\r\n"]},"metadata":{},"sourceType":"module"}